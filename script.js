const GEMINI_CONFIG={API_URL:"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent",API_KEY:"AIzaSyAd27ptuNgUsenf_vw2eQodBmm9kE-D8cE"};function scrollToHustleOutput(){const e=document.getElementById("hustle-output");setTimeout((()=>{e.scrollIntoView({behavior:"smooth",block:"start"})}),100)}async function fetchHustleData(e){try{document.getElementById("hustle-output").innerHTML=`\n            <div class="loading">\n                <span class="spinning-emoji">üîç</span> Scanning hustle opportunities in ${e}...\n                <div style="font-size: 0.8em; margin-top: 10px; color: #666;">\n                    We are scanning for the best hustles and this takes up to 30 seconds. Please be patient.\n                </div>\n            </div>`,scrollToHustleOutput();let t;document.querySelectorAll(".city-btn").forEach((e=>e.classList.remove("active")));let n=!1;try{t=await fetchHustleFromGemini(e),n=!0}catch(i){console.warn("Gemini API error:",i),t=getFallbackHustles(e),n=!1}renderHustles(t,e,n);const i=document.querySelector(`.city-btn[data-city="${e}"]`);i&&i.classList.add("active")}catch(e){showError(e.message||"An unexpected error occurred")}}function renderHustles(e,t,n){const i=document.getElementById("hustle-output");i.innerHTML="";const s=document.createElement("h2");s.className="hustle-heading",s.innerHTML='Here are your Hustle Opportunities. Pick one and Start Running!<br><span class="hustle-subheading">Refresh Hustle for New Ideas</span>',i.appendChild(s);const o=document.createElement("div");o.className="hustle-cards-container";const a=(e,t,n)=>!t||Array.isArray(t)&&0===t.length||"string"==typeof t&&!t?`\n                <div class="missing-section">\n                    <p class="missing-text">No ${e} data available</p>\n                    <button class="reload-section-btn" data-hustle-index="${n}" \n                            data-section="${e.toLowerCase().replace(" ","-")}">\n                        üîÑ Reload ${e}\n                    </button>\n                </div>\n            `:"";if(e.forEach(((e,t)=>{const n=document.createElement("div");n.className="hustle-card";let i=`\n            <div class="copy-button-container">\n                <button class="copy-hustle-btn" data-hustle-index="${t}">\n                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                        <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>\n                        <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>\n                    </svg>\n                    Copy\n                </button>\n            </div>\n            <h3>${e.name.replace(/['"]/g,"")}</h3>\n            <div class="hustle-details">\n                <p><strong>Executive Summary:</strong> ${e.summary}</p>\n                \n                <div class="hustle-metrics">\n                    <span class="metric"><strong>Difficulty:</strong> ${e.difficulty}</span>\n                    <span class="metric"><strong>Profitability:</strong> <span class="profit-badge">${e.profitability}</span></span>\n                    <span class="metric"><strong>Initial Cost:</strong> ${e.cost}</span>\n                </div>\n                \n                <div class="metrics-section">\n                    <h4>Key Metrics</h4>\n                    <div class="metrics-grid">\n                        <div class="metric-item">\n                            <strong>Startup Time:</strong><br>${e.metrics.startupTime}\n                        </div>\n                        <div class="metric-item">\n                            <strong>Break-even:</strong><br>${e.metrics.breakEven}\n                        </div>\n                        <div class="metric-item">\n                            <strong>Scalability:</strong><br>${e.metrics.scalability}\n                        </div>\n                    </div>\n                </div>\n                \n                <div class="action-plan-section">\n                    <h4>Action Plan (First Month)</h4>\n                    ${e.actionPlan.length>0?`\n                        <div class="timeline">\n                            ${e.actionPlan.map(((e,t)=>`\n                                <div class="timeline-item">\n                                    <div class="timeline-marker">W${t+1}</div>\n                                    <div class="timeline-content">${e}</div>\n                                </div>\n                            `)).join("")}\n                        </div>\n                    `:a("Action Plan",e.actionPlan,t)}\n                </div>\n                \n                <div class="resources-section">\n                    <h4>Resources</h4>\n                    <div class="resources-grid">\n                        <div class="resource-item">\n                            <strong>üõ†Ô∏è Tools:</strong>\n                            <ul>${e.resources.tools.map((e=>`<li>${e}</li>`)).join("")}</ul>\n                        </div>\n                        <div class="resource-item">\n                            <strong>üíª Platforms:</strong>\n                            <ul>${e.resources.platforms.map((e=>`<li>${e}</li>`)).join("")}</ul>\n                        </div>\n                        <div class="resource-item">\n                            <strong>üë• Communities:</strong>\n                            <ul>${e.resources.communities.map((e=>`<li>${e}</li>`)).join("")}</ul>\n                        </div>\n                    </div>\n                </div>\n                \n                <div class="monetization-section">\n                    <h4>Monetization Streams</h4>\n                    ${e.monetization.length>0?`\n                        <div class="monetization-list">\n                            ${e.monetization.map(((e,t)=>`\n                                <div class="monetization-item">\n                                    <span class="monetization-number">${t+1}</span>\n                                    <span class="monetization-content">${e}</span>\n                                </div>\n                            `)).join("")}\n                        </div>\n                    `:a("Monetization",e.monetization,t)}\n                </div>\n                \n                <div class="risks-section">\n                    <h4>Risk Analysis</h4>\n                    ${e.risks.length>0?`\n                        ${e.risks.map((e=>`\n                            <div class="risk-item">\n                                <div class="risk-challenge">\n                                    <strong>‚ö†Ô∏è Challenge:</strong> ${e.challenge}\n                                </div>\n                                <div class="risk-solution">\n                                    <strong>üí° Solution:</strong> ${e.solution}\n                                </div>\n                            </div>\n                        `)).join("")}\n                    `:a("Risk Analysis",e.risks,t)}\n                </div>\n            </div>\n        `;n.innerHTML=i,o.appendChild(n)})),i.appendChild(o),document.querySelectorAll(".copy-hustle-btn").forEach((t=>{t.addEventListener("click",(function(){const t=parseInt(this.getAttribute("data-hustle-index")),n=e[t];if(n){const e=formatHustleForCopy(n);navigator.clipboard.writeText(e).then((()=>{const e=this.innerHTML;this.innerHTML='\n                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                                <polyline points="20 6 9 17 4 12"></polyline>\n                            </svg>\n                            Copied!\n                        ',setTimeout((()=>{this.innerHTML=e}),2e3)})).catch((e=>{console.error("Failed to copy text: ",e)}))}}))})),n){const e=document.createElement("div");e.className="refresh-button-container";const n=document.createElement("button");n.id="refresh-hustle-btn",n.className="refresh-btn",n.textContent="üîÑ Refresh Hustle Ideas",e.appendChild(n),i.appendChild(e),n.addEventListener("click",(()=>{n.disabled=!0,n.classList.add("loading");const e=document.querySelector(".city-btn.active"),i=e.textContent;e.textContent="Loading...",e.classList.add("loading"),document.querySelectorAll(".city-btn").forEach((e=>{e.disabled=!0,e.style.cursor="not-allowed"})),fetchHustleData(t).finally((()=>{n.disabled=!1,n.classList.remove("loading"),e.textContent=i,e.classList.remove("loading"),document.querySelectorAll(".city-btn").forEach((e=>{e.disabled=!1,e.style.cursor="pointer"})),document.getElementById("hustle-output").scrollIntoView({behavior:"smooth"})}))}))}}function showError(e){document.getElementById("hustle-output").innerHTML=`<div class="error">‚ö†Ô∏è ${e}</div>`,scrollToHustleOutput()}function parseHustles(e,t){const n=[],i=e.split(/Name:/g).filter((e=>e.trim()));for(const e of i.slice(0,3)){const t="Name:"+e,i={name:"",summary:"",difficulty:"",profitability:"",cost:"",metrics:{startupTime:"",breakEven:"",scalability:""},actionPlan:[],resources:{tools:[],platforms:[],communities:[]},monetization:[],risks:[]},s=t.match(/Name:\s*(.+?)(?=\n|Executive)/);s&&(i.name=s[1].trim());const o=t.match(/Executive Summary:\s*(.+?)(?=\n|Difficulty)/s);o&&(i.summary=o[1].trim());const a=t.match(/Difficulty:\s*(.+?)(?=\n|Profitability)/);a&&(i.difficulty=a[1].trim());const r=t.match(/Profitability:\s*(.+?)(?=\n|Cost)/);r&&(i.profitability=r[1].trim());const l=t.match(/Cost:\s*(.+?)(?=\n|Key Metrics)/);l&&(i.cost=l[1].trim());const c=t.match(/Key Metrics:\s*(.+?)(?=\n\nAction Plan)/s);if(c){const e=c[1],t=e.match(/Startup Time:\s*(.+?)(?=\n|-)/);t&&(i.metrics.startupTime=t[1].trim());const n=e.match(/Break-even Point:\s*(.+?)(?=\n|-)/);n&&(i.metrics.breakEven=n[1].trim());const s=e.match(/Scalability:\s*(.+?)(?=\n|$)/);s&&(i.metrics.scalability=s[1].trim())}const m=t.match(/Action Plan \(First Month\):\s*(.+?)(?=\n\nResources)/s);if(m){const e=m[1].match(/Week \d+:.*?(?=\n|$)/g);e&&(i.actionPlan=e.map((e=>e.trim())))}const u=t.match(/Resources:\s*(.+?)(?=\n\nMonetization)/s);if(u){const e=u[1],t=e.match(/Tools:\s*(.+?)(?=\n|Platforms)/);t&&(i.resources.tools=t[1].split(",").map((e=>e.trim())).filter((e=>e)));const n=e.match(/Platforms:\s*(.+?)(?=\n|Communities)/);n&&(i.resources.platforms=n[1].split(",").map((e=>e.trim())).filter((e=>e)));const s=e.match(/Communities:\s*(.+?)(?=\n|$)/);s&&(i.resources.communities=s[1].split(",").map((e=>e.trim())).filter((e=>e)))}const d=t.match(/Monetization:\s*(.+?)(?=\n\nRisk Analysis)/s);if(d){const e=d[1].match(/\d+\.\s*.*?(?=\n|$)/g);e&&(i.monetization=e.map((e=>e.replace(/^\d+\.\s*/,"").trim())))}const p=t.match(/Risk Analysis:\s*(.+?)(?=$)/s);if(p){const e=p[1],t=e.match(/Challenge:\s*.*?(?=\n|$)/g),n=e.match(/Solution:\s*.*?(?=\n|-|$)/g);if(t&&n)for(let e=0;e<Math.min(t.length,n.length);e++)i.risks.push({challenge:t[e].replace("Challenge:","").trim(),solution:n[e].replace("Solution:","").trim()})}i.name&&i.summary&&n.push(i)}return n.length>0?n:null}document.addEventListener("DOMContentLoaded",(function(){const e=document.getElementById("city-input"),t=document.getElementById("get-hustle-btn"),n=document.querySelectorAll(".city-btn");t.addEventListener("click",(function(){const t=e.value.trim();t?fetchHustleData(t):(showError("Please enter a city name"),scrollToHustleOutput())})),n.forEach((t=>{t.addEventListener("click",(async function(){const t=this.textContent;n.forEach((e=>{e.disabled=!0,e.style.cursor="not-allowed"})),this.textContent="Loading...",this.classList.add("loading"),n.forEach((e=>e.classList.remove("active"))),this.classList.add("active");const i=this.getAttribute("data-city");e.value=i;try{await fetchHustleData(i),document.getElementById("hustle-output").scrollIntoView({behavior:"smooth"})}finally{this.textContent=t,this.classList.remove("loading"),n.forEach((e=>{e.disabled=!1,e.style.cursor="pointer"}))}}))})),e.addEventListener("keypress",(async function(t){if("Enter"===t.key){const t=e.value.trim();if(t){const e=document.querySelector(`.city-btn[data-city="${t}"]`);if(e){const n=e.textContent;e.textContent="Loading...",e.classList.add("loading"),document.querySelectorAll(".city-btn").forEach((e=>{e.disabled=!0,e.style.cursor="not-allowed"}));try{await fetchHustleData(t),document.querySelectorAll(".city-btn").forEach((e=>e.classList.remove("active"))),e.classList.add("active")}finally{e.textContent=n,e.classList.remove("loading"),document.querySelectorAll(".city-btn").forEach((e=>{e.disabled=!1,e.style.cursor="pointer"}))}}else await fetchHustleData(t)}else showError("Please enter a city name"),scrollToHustleOutput()}}))}));let previousHustleNames=[];async function fetchHustleFromGemini(e,t=0){try{document.getElementById("hustle-output").innerHTML=`\n      <div class="loading">\n        <span class="spinning-emoji">üîç</span> Scanning hustle opportunities in ${e}...\n        <div style="font-size: 0.4em; margin-top: 10px; color: #666;">\n          Scanning for the best and unique hustles can take 5-30 seconds\n        </div>\n      </div>`;const n=`Generate 3 highly unique and unconventional side hustles tailored to ${e}'s local economy, culture, demographics, and untapped opportunities. Avoid common ideas like food delivery, tutoring, or generic freelancing. ${previousHustleNames.length>0?`Do not repeat these previous ideas: ${previousHustleNames.join(", ")}.`:""} Format EXACTLY like:\n\nName: [Business Name]\nExecutive Summary: [2-3 sentences describing the opportunity]\nDifficulty: [Easy/Medium/Hard]\nProfitability: [$/month range with specific numbers]\nCost: [Initial cost breakdown with specific numbers]\n\nKey Metrics:\n- Startup Time: [X weeks based on complexity, must be specific]\n- Break-even Point: [Y months with calculation based on costs and revenue]\n- Scalability: [Low/Medium/High with detailed explanation]\n\nAction Plan (First Month):\nWeek 1: [specific actionable milestone with measurable outcome]\nWeek 2: [specific actionable milestone with measurable outcome]\nWeek 3: [specific actionable milestone with measurable outcome]\nWeek 4: [specific actionable milestone with measurable outcome]\n\nResources:\n- Tools: [List exactly 3-5 specific tools with actual names and brief purpose]\n- Platforms: [List exactly 2-3 specific platforms with actual names]\n- Communities: [1 specific local community in ${e} + 1 specific online community]\n\nMonetization:\n1. [Primary revenue stream with exact pricing and volume estimates]\n2. [Secondary revenue stream with exact pricing and volume estimates]\n3. [Additional revenue stream with exact pricing and volume estimates]\n\nRisk Analysis:\n- Challenge: [specific realistic risk with quantifiable impact]\n  Solution: [detailed actionable mitigation steps]\n- Challenge: [specific realistic risk with quantifiable impact]\n  Solution: [detailed actionable mitigation steps]\n\nCRITICAL INSTRUCTION: You MUST provide complete, specific, and realistic details for EVERY section of ALL 3 hustles. Omitting or providing vague details for any section will force a retry. Each hustle must be distinct, creative, and rooted in ${e}'s unique characteristics (e.g., local industries, climate, population trends, or subcultures). Every metric must include specific numbers, every action must be measurable, and every solution must be actionable. Responses with placeholders, generic answers, or incomplete sections will be rejected.`,i=await fetch(`${GEMINI_CONFIG.API_URL}?key=${GEMINI_CONFIG.API_KEY}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({contents:[{parts:[{text:n}]}],safetySettings:[{category:"HARM_CATEGORY_DANGEROUS_CONTENT",threshold:"BLOCK_ONLY_HIGH"}],generationConfig:{maxOutputTokens:1500,temperature:1.2,topP:.9,topK:50}})});if(!i.ok)throw new Error(`API Error: ${i.status}`);const s=await i.json(),o=parseHustles(s?.candidates?.[0]?.content?.parts?.[0]?.text||"",e);if(!o)throw new Error("Invalid hustle data format");const a=o.map((e=>validateHustleQuality(e))),r=a.some((e=>e.completeness<.9)),l=a.reduce(((e,t)=>e+t.completeness),0)/a.length;return(r||l<.85)&&t<4?(console.log(`Incomplete or low-quality response (Avg: ${Math.round(100*l)}%). Retrying...`),fetchHustleFromGemini(e,t+1)):(previousHustleNames=[...new Set([...previousHustleNames,...a.map((e=>e.hustle.name))])].slice(-10),a.map((e=>e.hustle)))}catch(e){throw console.error("API Error:",e),new Error("Failed to connect to hustle database")}}function validateHustleQuality(e){const t={name:.05,summary:.1,difficulty:.05,profitability:.05,cost:.05,metrics:{startupTime:.05,breakEven:.05,scalability:.05},actionPlan:.15,resources:{tools:.05,platforms:.05,communities:.05},monetization:.2,risks:.2};let n=0;for(const[i,s]of Object.entries(t))if("object"==typeof s)for(const[t,o]of Object.entries(s))e[i][t]&&("string"==typeof e[i][t]?e[i][t].length>0:!Array.isArray(e[i][t])||e[i][t].length>0)&&(n+=o);else e[i]&&("string"==typeof e[i]?e[i].length>0:!Array.isArray(e[i])||e[i].length>0)&&(n+=s);return Array.isArray(e.actionPlan)&&e.actionPlan.length>=4&&(n+=.025),Array.isArray(e.monetization)&&e.monetization.length>=3&&(n+=.05),Array.isArray(e.risks)&&e.risks.length>=2&&(n+=.05),Array.isArray(e.resources.tools)&&e.resources.tools.length>=3&&(n+=.025),Array.isArray(e.resources.platforms)&&e.resources.platforms.length>=2&&(n+=.025),Array.isArray(e.resources.communities)&&e.resources.communities.length>=2&&(n+=.025),{hustle:e,completeness:n,isHighQuality:n>=.9}}function getFallbackHustles(e){return[{name:`${e} Local Experiences Tour Guide`,summary:`Offer unique, themed walking tours focused on specific areas or interests in ${e}, appealing to tourists and locals. Leverage local knowledge and create memorable experiences beyond typical tourist traps.`,difficulty:"Medium",profitability:"$500 - $2000/month",cost:"$150 (Website domain, initial marketing materials)",metrics:{startupTime:"4-6 weeks",breakEven:"2-3 months",scalability:"Medium - Can expand to multiple tour themes and hire additional guides"},actionPlan:['Week 1: Define tour themes (e.g., "Hidden Gems of Downtown", "Literary History Tour", "Local Cuisine Experience"). Research routes and points of interest.',"Week 2: Create website or landing page with tour descriptions, schedules, and booking information.","Week 3: Market tours online through social media and local listings. Offer introductory discounts.","Week 4: Conduct initial tours, gather feedback, and refine the tour experience."],resources:{tools:["Booking software","Portable microphone/speaker","Digital camera"],platforms:["TripAdvisor","Airbnb Experiences"],communities:[`${e} Tourism Board`,"Facebook Group: Tour Guides Worldwide"]},monetization:["Standard tours: $25-40 per person for 2-hour experiences","Premium/private tours: $150-200 for groups up to 6 people","Custom corporate team-building tours: $400-600 per event"],risks:[{challenge:"Seasonal tourism fluctuations",solution:"Develop special off-season tours targeting locals and business travelers"},{challenge:"Competition from established tour companies",solution:"Focus on unique niches and specialized knowledge that larger companies don't cover"}]},{name:`${e} Mobile Pet Grooming Service`,summary:`Provide convenient, stress-free pet grooming services directly at customers' homes in ${e}. Cater to busy pet owners who value convenience and pets that experience anxiety in traditional grooming environments.`,difficulty:"Medium",profitability:"$1,500 - $4,000/month",cost:"$2,000 - $5,000 (Equipment, supplies, vehicle modifications)",metrics:{startupTime:"6-8 weeks",breakEven:"4-6 months",scalability:"High - Can add additional mobile units and groomers"},actionPlan:["Week 1: Research local pet demographics and competitors. Obtain necessary licenses and insurance.","Week 2: Purchase equipment and supplies. Set up booking and payment system.","Week 3: Create website and social media presence. Begin targeted marketing to pet owners.","Week 4: Offer promotional pricing for initial customers to build reviews and referrals."],resources:{tools:["Mobile grooming equipment","Scheduling software","Pet-friendly cleaning supplies"],platforms:["Instagram","NextDoor"],communities:[`${e} Pet Owners Association`,"Online Pet Groomers Network"]},monetization:["Basic grooming package: $65-85 per small dog, $85-120 per large dog","Premium spa packages: $100-150 including specialized treatments","Membership subscriptions: $50/month discount for recurring monthly appointments"],risks:[{challenge:"Vehicle and equipment maintenance issues",solution:"Establish relationships with reliable mechanics and keep backup equipment"},{challenge:"Handling difficult or aggressive pets",solution:"Obtain specialized training in animal behavior and implement clear policies for pet evaluation"}]},{name:`${e} Local Food Delivery Collective`,summary:`Create a cooperative delivery service exclusively for local, independent restaurants in ${e} that can't afford high fees from mainstream delivery apps. Provide fair pricing for restaurants and better compensation for drivers.`,difficulty:"Hard",profitability:"$2,000 - $6,000/month",cost:"$3,000 - $8,000 (App development, marketing, legal setup)",metrics:{startupTime:"10-12 weeks",breakEven:"8-10 months",scalability:"Medium - Limited to local market but can expand to neighboring areas"},actionPlan:["Week 1: Survey local restaurants about pain points with current delivery services. Begin legal formation of cooperative structure.","Week 2: Develop initial version of ordering platform or app. Begin recruiting delivery drivers.","Week 3: Onboard first 5-10 restaurant partners and conduct platform testing.","Week 4: Soft launch with limited service area and hours. Gather feedback for improvements."],resources:{tools:["Order management software","Route optimization tools","Payment processing system"],platforms:["Custom mobile app","Instagram"],communities:[`${e} Restaurant Association`,"Independent Restaurant Alliance"]},monetization:["Restaurant commission: 10-15% of order value (versus 25-35% from major apps)","Customer delivery fee: $3.99-5.99 based on distance","Premium membership option: $9.99/month for free delivery and priority service"],risks:[{challenge:"Competition from well-funded delivery apps",solution:"Emphasize local ownership, better restaurant economics, and community support in marketing"},{challenge:"Technology reliability issues",solution:"Implement backup systems and clear manual processes for when technical issues arise"}]}]}const scrollTopBtn=document.querySelector(".scroll-top-btn");function scrollToHustleOutput(){const e=document.getElementById("hustle-output");e&&e.scrollIntoView({behavior:"smooth",block:"start"})}async function reloadSectionFromGemini(e,t,n){const i={"action-plan":`Generate a detailed Action Plan (First Month) for the side hustle "${t}" in ${e}. Format EXACTLY like:\n    Action Plan (First Month):\n    Week 1: [specific milestone]\n    Week 2: [specific milestone]\n    Week 3: [specific milestone]\n    Week 4: [specific milestone]\n    Provide 4 specific, realistic milestones tailored to ${e}.`,monetization:`Generate a detailed Monetization plan for the side hustle "${t}" in ${e}. Format EXACTLY like:\n    Monetization:\n    1. [Primary revenue stream with detailed pricing]\n    2. [Secondary revenue stream with detailed pricing]\n    3. [Additional revenue stream with detailed pricing]\n    Provide 3 specific, realistic revenue streams tailored to ${e}.`,"risk-analysis":`Generate a detailed Risk Analysis for the side hustle "${t}" in ${e}. Format EXACTLY like:\n    Risk Analysis:\n    - Challenge: [specific realistic risk 1]\n      Solution: [specific actionable mitigation 1]\n    - Challenge: [specific realistic risk 2]\n      Solution: [specific actionable mitigation 2]\n    Provide 2 specific, realistic risks and solutions tailored to ${e}.`}[n];if(!i)throw new Error("Invalid section");const s=await fetch(`${GEMINI_CONFIG.API_URL}?key=${GEMINI_CONFIG.API_KEY}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({contents:[{parts:[{text:i}]}],safetySettings:[{category:"HARM_CATEGORY_DANGEROUS_CONTENT",threshold:"BLOCK_ONLY_HIGH"}],generationConfig:{maxOutputTokens:500,temperature:1.2,topP:.9,topK:50}})});if(!s.ok)throw new Error(`API Error: ${s.status}`);const o=await s.json(),a=o?.candidates?.[0]?.content?.parts?.[0]?.text||"";switch(n){case"action-plan":return(a.match(/Week \d+:.*?(?=\n|$)/g)||[]).map((e=>e.trim()));case"monetization":return(a.match(/\d+\.\s*.*?(?=\n|$)/g)||[]).map((e=>e.replace(/^\d+\.\s*/,"").trim()));case"risk-analysis":const e=a.match(/Challenge:\s*.*?(?=\n|$)/g)||[],t=a.match(/Solution:\s*.*?(?=\n|-|$)/g)||[];return e.map(((e,n)=>({challenge:e.replace("Challenge:","").trim(),solution:t[n]?.replace("Solution:","").trim()||"N/A"})));default:return null}}function updateHustleSection(e,t,n,i){if(e[t])switch(n){case"action-plan":Array.isArray(i)&&i.length>=4&&(e[t].actionPlan=i);break;case"monetization":Array.isArray(i)&&i.length>=3&&(e[t].monetization=i);break;case"risk-analysis":Array.isArray(i)&&i.length>=2&&(e[t].risks=i)}}window.addEventListener("scroll",(()=>{window.pageYOffset>100?scrollTopBtn.style.display="block":scrollTopBtn.style.display="none"})),scrollTopBtn.addEventListener("click",(()=>{window.scrollTo({top:0,behavior:"smooth"})})),document.getElementById("get-hustle-btn").addEventListener("click",(()=>{scrollToHustleOutput()})),document.getElementById("city-input").addEventListener("keypress",(e=>{"Enter"===e.key&&(e.preventDefault(),document.getElementById("get-hustle-btn").click(),scrollToHustleOutput())})),document.querySelectorAll(".city-btn").forEach((e=>{e.addEventListener("click",(()=>{scrollToHustleOutput()}))}));const CITY_CURRENCY_MAP={nairobi:{code:"KES",symbol:"KSh"},lagos:{code:"NGN",symbol:"‚Ç¶"},johannesburg:{code:"ZAR",symbol:"R"},london:{code:"GBP",symbol:"¬£"},"new york":{code:"USD",symbol:"$"},tokyo:{code:"JPY",symbol:"¬•"},mumbai:{code:"INR",symbol:"‚Çπ"},dubai:{code:"AED",symbol:"ÿØ.ÿ•"},singapore:{code:"SGD",symbol:"S$"},sydney:{code:"AUD",symbol:"A$"}},FALLBACK_CURRENCY={code:"USD",symbol:"$"};function getLocalCurrency(e){const t=e.trim().toLowerCase(),n=CITY_CURRENCY_MAP[t]||FALLBACK_CURRENCY;return n.format=e=>{const t=e.toString().replace(/[^0-9.-]+/g,"");return`${n.symbol}${t}`},n}function formatHustleForCopy(e){let t=`HUSTLE IDEA: ${e.name}\n\n`;return t+=`EXECUTIVE SUMMARY:\n${e.summary}\n\n`,t+=`DIFFICULTY: ${e.difficulty}\n`,t+=`PROFITABILITY: ${e.profitability}\n`,t+=`INITIAL COST: ${e.cost}\n\n`,t+="KEY METRICS:\n",t+=`- Startup Time: ${e.metrics.startupTime}\n`,t+=`- Break-even: ${e.metrics.breakEven}\n`,t+=`- Scalability: ${e.metrics.scalability}\n\n`,t+="ACTION PLAN (FIRST MONTH):\n",e.actionPlan.forEach(((e,n)=>{t+=`- ${e}\n`})),t+="\n",t+="RESOURCES:\n",t+=`- Tools: ${e.resources.tools.join(", ")}\n`,t+=`- Platforms: ${e.resources.platforms.join(", ")}\n`,t+=`- Communities: ${e.resources.communities.join(", ")}\n\n`,t+="MONETIZATION STREAMS:\n",e.monetization.forEach(((e,n)=>{t+=`${n+1}. ${e}\n`})),t+="\n",t+="RISK ANALYSIS:\n",e.risks.forEach((e=>{t+=`- Challenge: ${e.challenge}\n`,t+=`  Solution: ${e.solution}\n`})),t}